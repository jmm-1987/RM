#!/usr/bin/env python3
"""
Script para configurar el webhook de Green-API para recibir mensajes
"""

import requests
import json
import os

def configurar_webhook():
    """Configurar webhook en Green-API para recibir mensajes"""
    
    # Configuraci√≥n de Green-API
    try:
        if os.environ.get('RENDER'):
            from config import GREEN_API_URL, GREEN_API_TOKEN, GREEN_API_INSTANCE_ID
        else:
            from green_api_config import GREEN_API_URL, GREEN_API_TOKEN, GREEN_API_INSTANCE_ID
    except ImportError:
        print("‚ùå Error: No se encontr√≥ la configuraci√≥n de Green-API")
        print("Aseg√∫rate de tener configurado green_api_config.py o las variables de entorno")
        return False
    
    # URL del webhook (debe ser accesible desde internet)
    # Esta debe ser la URL de TU aplicaci√≥n web, no la de Green-API
    webhook_url = input("Ingresa la URL completa de tu webhook (ej: https://tu-dominio.com/webhook/whatsapp): ")
    
    if not webhook_url:
        print("‚ùå Error: Debe proporcionar una URL v√°lida")
        return False
    
    try:
        # URL para configurar el webhook
        instance_id = GREEN_API_INSTANCE_ID
        url = f"{GREEN_API_URL}/waInstance{instance_id}/setSettings/{GREEN_API_TOKEN}"
        
        # Datos para configurar el webhook
        data = {
            "webhookUrl": webhook_url,
            "webhookUrlToken": "",  # Token opcional para seguridad
            "outgoingWebhook": "yes",
            "outgoingMessageWebhook": "yes",
            "incomingMessageWebhook": "yes",
            "stateWebhook": "yes",
            "deviceWebhook": "yes"
        }
        
        print(f"üîß Configurando webhook en Green-API...")
        print(f"URL: {webhook_url}")
        print(f"API URL: {url}")
        
        response = requests.post(url, json=data, timeout=30)
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ Webhook configurado exitosamente!")
            print(f"Respuesta: {result}")
            
            # Verificar configuraci√≥n actual
            verificar_configuracion()
            return True
        else:
            print(f"‚ùå Error configurando webhook: {response.status_code}")
            print(f"Respuesta: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return False

def verificar_configuracion():
    """Verificar la configuraci√≥n actual del webhook"""
    try:
        if os.environ.get('RENDER'):
            from config import GREEN_API_URL, GREEN_API_TOKEN, GREEN_API_INSTANCE_ID
        else:
            from green_api_config import GREEN_API_URL, GREEN_API_TOKEN, GREEN_API_INSTANCE_ID
        
        instance_id = GREEN_API_INSTANCE_ID
        url = f"{GREEN_API_URL}/waInstance{instance_id}/getSettings/{GREEN_API_TOKEN}"
        
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            settings = response.json()
            print("\nüìã Configuraci√≥n actual:")
            print(f"- Webhook URL: {settings.get('webhookUrl', 'No configurado')}")
            print(f"- Webhook Token: {settings.get('webhookUrlToken', 'No configurado')}")
            print(f"- Outgoing Webhook: {settings.get('outgoingWebhook', 'No')}")
            print(f"- Incoming Message Webhook: {settings.get('incomingMessageWebhook', 'No')}")
            print(f"- State Webhook: {settings.get('stateWebhook', 'No')}")
            print(f"- Device Webhook: {settings.get('deviceWebhook', 'No')}")
        else:
            print(f"‚ùå Error verificando configuraci√≥n: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå Error verificando configuraci√≥n: {e}")

def probar_webhook():
    """Probar el webhook enviando un mensaje de prueba"""
    print("\nüß™ Para probar el webhook:")
    print("1. Env√≠a un mensaje de WhatsApp al n√∫mero configurado en Green-API")
    print("2. Ve a tu aplicaci√≥n web en la secci√≥n 'Mensajes Recibidos'")
    print("3. El mensaje deber√≠a aparecer autom√°ticamente")
    
    numero_test = input("\n¬øQuieres enviar un mensaje de prueba? (s/n): ")
    if numero_test.lower() == 's':
        numero = input("Ingresa el n√∫mero de tel√©fono (con c√≥digo pa√≠s): ")
        mensaje = input("Ingresa el mensaje de prueba: ")
        
        try:
            if os.environ.get('RENDER'):
                from config import GREEN_API_URL, GREEN_API_TOKEN, GREEN_API_INSTANCE_ID
            else:
                from green_api_config import GREEN_API_URL, GREEN_API_TOKEN, GREEN_API_INSTANCE_ID
            
            instance_id = GREEN_API_INSTANCE_ID
            url = f"{GREEN_API_URL}/waInstance{instance_id}/sendMessage/{GREEN_API_TOKEN}"
            
            data = {
                "chatId": f"{numero}@c.us",
                "message": f"üß™ Mensaje de prueba desde Recambios RM:\n\n{mensaje}\n\nResponde a este mensaje para probar la recepci√≥n."
            }
            
            response = requests.post(url, json=data, timeout=30)
            
            if response.status_code == 200:
                result = response.json()
                print(f"‚úÖ Mensaje de prueba enviado! ID: {result.get('idMessage')}")
                print("Ahora responde a ese mensaje desde WhatsApp para probar la recepci√≥n.")
            else:
                print(f"‚ùå Error enviando mensaje de prueba: {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå Error: {e}")

if __name__ == "__main__":
    print("üöÄ Configurador de Webhook para Green-API")
    print("=" * 50)
    
    # Verificar configuraci√≥n actual
    print("1. Verificando configuraci√≥n actual...")
    verificar_configuracion()
    
    # Configurar webhook
    print("\n2. Configurando webhook...")
    if configurar_webhook():
        # Probar webhook
        print("\n3. Probando webhook...")
        probar_webhook()
    
    print("\n‚úÖ Configuraci√≥n completada!")
    print("\nüìù Instrucciones:")
    print("- Los mensajes recibidos aparecer√°n en: /mensajes-recibidos")
    print("- Puedes responder desde la aplicaci√≥n web")
    print("- El historial se guarda autom√°ticamente en la base de datos")
